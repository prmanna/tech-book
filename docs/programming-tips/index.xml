<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Programming Tips on Technical Book</title><link>https://prasenjitmanna.com/tech-book/docs/programming-tips/</link><description>Recent content in Programming Tips on Technical Book</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://prasenjitmanna.com/tech-book/docs/programming-tips/index.xml" rel="self" type="application/rss+xml"/><item><title>C++ Tips</title><link>https://prasenjitmanna.com/tech-book/docs/programming-tips/c++/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prasenjitmanna.com/tech-book/docs/programming-tips/c++/</guid><description>&lt;h1 id="c-tips">
 C++ Tips
 &lt;a class="anchor" href="#c-tips">#&lt;/a>
&lt;/h1>
&lt;hr>
&lt;h2 id="templates">
 Templates
 &lt;a class="anchor" href="#templates">#&lt;/a>
&lt;/h2>
&lt;p>A template is a simple yet very powerful tool in C++. The simple idea is to pass the data type as a parameter so that we donâ€™t need to write the same code for different data types. For example, a software company may need to sort() for different data types. Rather than writing and maintaining multiple codes, we can write one sort() and pass the datatype as a parameter.&lt;/p></description></item></channel></rss>