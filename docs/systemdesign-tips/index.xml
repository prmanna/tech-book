<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SystemDesign-Tips on Technical Book</title><link>https://prasenjitmanna.com/tech-book/docs/systemdesign-tips/</link><description>Recent content in SystemDesign-Tips on Technical Book</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://prasenjitmanna.com/tech-book/docs/systemdesign-tips/index.xml" rel="self" type="application/rss+xml"/><item><title>Design A Code-Deployment System</title><link>https://prasenjitmanna.com/tech-book/docs/systemdesign-tips/code-deployment-system/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prasenjitmanna.com/tech-book/docs/systemdesign-tips/code-deployment-system/</guid><description>&lt;h3 id="1-gathering-system-requirements">
 1. Gathering System Requirements
 &lt;a class="anchor" href="#1-gathering-system-requirements">#&lt;/a>
&lt;/h3>
&lt;p>As with any systems design interview question, the first thing that we want to do is to gather system requirements; we need to figure out what system we&amp;rsquo;re building exactly.&lt;/p>
&lt;p>From the answers we were given to our clarifying questions (see Prompt Box), we&amp;rsquo;re building a system that involves repeatedly (in the order of thousands of times per day) building and deploying code to hundreds of thousands of machines spread out across &lt;strong>5-10 regions around&lt;/strong> the world.&lt;/p></description></item><item><title>Design A Stock-Broker System</title><link>https://prasenjitmanna.com/tech-book/docs/systemdesign-tips/stock-broker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prasenjitmanna.com/tech-book/docs/systemdesign-tips/stock-broker/</guid><description>&lt;h3 id="1-gathering-system-requirements">
 1. Gathering System Requirements
 &lt;a class="anchor" href="#1-gathering-system-requirements">#&lt;/a>
&lt;/h3>
&lt;p>As with any systems design interview question, the first thing that we want to do is to gather system requirements; we need to figure out what system we&amp;rsquo;re building exactly.&lt;/p>
&lt;p>We&amp;rsquo;re building a stock-brokerage platform like Robinhood that functions as the intermediary between end-customers and some central stock exchange. The idea is that the central stock exchange is the platform that actually executes stock trades, whereas the stockbroker is just the platform that customers talk to when they want to place a trade&amp;ndash;the stock brokerage is &amp;ldquo;simpler&amp;rdquo; and more &amp;ldquo;human-readable&amp;rdquo;, so to speak.&lt;/p></description></item><item><title>Design Amazon</title><link>https://prasenjitmanna.com/tech-book/docs/systemdesign-tips/design-amazon/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prasenjitmanna.com/tech-book/docs/systemdesign-tips/design-amazon/</guid><description>&lt;h3 id="1-gathering-system-requirements">
 1. Gathering System Requirements
 &lt;a class="anchor" href="#1-gathering-system-requirements">#&lt;/a>
&lt;/h3>
&lt;p>As with any systems design interview question, the first thing that we want to do is to gather system requirements; we need to figure out what system we&amp;rsquo;re building exactly.&lt;/p>
&lt;p>We&amp;rsquo;re designing the e-commerce side of the Amazon website, and more specifically, the system that supports users searching for items on the Amazon home page, adding items to cart, submitting orders, and those orders being assigned to relevant Amazon warehouses for shipment.&lt;/p></description></item><item><title>Design Slack</title><link>https://prasenjitmanna.com/tech-book/docs/systemdesign-tips/design-slack/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prasenjitmanna.com/tech-book/docs/systemdesign-tips/design-slack/</guid><description>&lt;h3 id="1-gathering-system-requirements">
 1. Gathering System Requirements
 &lt;a class="anchor" href="#1-gathering-system-requirements">#&lt;/a>
&lt;/h3>
&lt;p>As with any systems design interview question, the first thing that we want to do is to gather system requirements; we need to figure out what system we&amp;rsquo;re building exactly.&lt;/p>
&lt;p>We&amp;rsquo;re designing the core communication system behind Slack, which allows users to send instant messages in Slack channels.&lt;/p>
&lt;p>Specifically, we&amp;rsquo;ll want to support:&lt;/p>
&lt;ul>
&lt;li>Loading the most recent messages in a Slack channel when a user clicks on the channel.&lt;/li>
&lt;li>Immediately seeing which channels have unread messages for a particular user when that user loads Slack.&lt;/li>
&lt;li>Immediately seeing which channels have unread mentions of a particular user, for that particular user, when that user loads Slack, and more specifically, the number of these unread mentions in each relevant channel.&lt;/li>
&lt;li>Sending and receiving Slack messages instantly, in real time.&lt;/li>
&lt;li>Cross-device synchronization: if a user has both the Slack desktop app and the Slack mobile app open, with an unread channel in both, and if they read this channel on one device, the second device should immediately be updated and no longer display the channel as unread.&lt;/li>
&lt;/ul>
&lt;p>The system should have low latencies and high availability, catering to a single region of roughly 20 million users. The largest Slack organizations will have as many as 50,000 users, with channels of the same size within them.&lt;/p></description></item><item><title>Google Drive - Design</title><link>https://prasenjitmanna.com/tech-book/docs/systemdesign-tips/google-drive/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prasenjitmanna.com/tech-book/docs/systemdesign-tips/google-drive/</guid><description>&lt;h3 id="1-gathering-system-requirements">
 1. Gathering System Requirements
 &lt;a class="anchor" href="#1-gathering-system-requirements">#&lt;/a>
&lt;/h3>
&lt;p>As with any systems design interview question, the first thing that we want to do is to gather system requirements; we need to figure out what system we&amp;rsquo;re building exactly.&lt;/p>
&lt;p>We&amp;rsquo;re designing the core user flow of the &lt;strong>Google Drive&lt;/strong> web application. This consists of storing two main entities: folders and files. More specifically, the system should allow users to create folders, upload and download files, and rename and move entities once they&amp;rsquo;re stored. We don&amp;rsquo;t have to worry about ACLs, sharing entities, or any other auxiliary Google Drive features.&lt;/p></description></item></channel></rss>