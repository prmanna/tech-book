<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SystemDesign-Tips on Technical Book</title><link>https://prasenjitmanna.com/tech-book/docs/systemdesign-tips/</link><description>Recent content in SystemDesign-Tips on Technical Book</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://prasenjitmanna.com/tech-book/docs/systemdesign-tips/index.xml" rel="self" type="application/rss+xml"/><item><title>Design A Code-Deployment System</title><link>https://prasenjitmanna.com/tech-book/docs/systemdesign-tips/code-deployment-system/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prasenjitmanna.com/tech-book/docs/systemdesign-tips/code-deployment-system/</guid><description>1. Gathering System Requirements # As with any systems design interview question, the first thing that we want to do is to gather system requirements; we need to figure out what system we&amp;rsquo;re building exactly.
From the answers we were given to our clarifying questions (see Prompt Box), we&amp;rsquo;re building a system that involves repeatedly (in the order of thousands of times per day) building and deploying code to hundreds of thousands of machines spread out across 5-10 regions around the world.</description></item><item><title>Design A Stock-Broker System</title><link>https://prasenjitmanna.com/tech-book/docs/systemdesign-tips/stock-broker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prasenjitmanna.com/tech-book/docs/systemdesign-tips/stock-broker/</guid><description>1. Gathering System Requirements # As with any systems design interview question, the first thing that we want to do is to gather system requirements; we need to figure out what system we&amp;rsquo;re building exactly.
We&amp;rsquo;re building a stock-brokerage platform like Robinhood that functions as the intermediary between end-customers and some central stock exchange. The idea is that the central stock exchange is the platform that actually executes stock trades, whereas the stockbroker is just the platform that customers talk to when they want to place a trade&amp;ndash;the stock brokerage is &amp;ldquo;simpler&amp;rdquo; and more &amp;ldquo;human-readable&amp;rdquo;, so to speak.</description></item><item><title>Design Slack</title><link>https://prasenjitmanna.com/tech-book/docs/systemdesign-tips/design-slack/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prasenjitmanna.com/tech-book/docs/systemdesign-tips/design-slack/</guid><description>1. Gathering System Requirements # As with any systems design interview question, the first thing that we want to do is to gather system requirements; we need to figure out what system we&amp;rsquo;re building exactly.
We&amp;rsquo;re designing the core communication system behind Slack, which allows users to send instant messages in Slack channels.
Specifically, we&amp;rsquo;ll want to support:
Loading the most recent messages in a Slack channel when a user clicks on the channel.</description></item><item><title>Google Drive - Design</title><link>https://prasenjitmanna.com/tech-book/docs/systemdesign-tips/google-drive/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://prasenjitmanna.com/tech-book/docs/systemdesign-tips/google-drive/</guid><description>1. Gathering System Requirements # As with any systems design interview question, the first thing that we want to do is to gather system requirements; we need to figure out what system we&amp;rsquo;re building exactly.
We&amp;rsquo;re designing the core user flow of the Google Drive web application. This consists of storing two main entities: folders and files. More specifically, the system should allow users to create folders, upload and download files, and rename and move entities once they&amp;rsquo;re stored.</description></item></channel></rss>